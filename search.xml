<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用Obsidian、Hexo、MkDocs搭建个人博客</title>
    <url>/posts/20220712163320/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1 id="使用Obsidian、Hexo、MkDocs搭建个人博客"><a href="#使用Obsidian、Hexo、MkDocs搭建个人博客" class="headerlink" title="使用Obsidian、Hexo、MkDocs搭建个人博客"></a>使用Obsidian、Hexo、MkDocs搭建个人博客</h1><blockquote>
<p>本文档最后更新于：<strong>2022-07-12 18:29</strong> ，请注意文章时效性！</p>
</blockquote>
<h2 id="实现流程"><a href="#实现流程" class="headerlink" title="实现流程"></a>实现流程</h2><p><img src="images/Obsidian%E3%80%81Hexo%E3%80%81MkDocs%E6%B5%81%E8%BD%AC%E5%9B%BE.excalidraw.svg" alt="Obsidian、Hexo、MkDocs流转图.excalidraw"></p>
<h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><h3 id="Obsidian"><a href="#Obsidian" class="headerlink" title="Obsidian"></a>Obsidian</h3><p>使用Obsidian正常完成文档的编写。如果要联动Hexo，则还需进行如下配置：</p>
<ol>
<li>文档元数据必须包含<code>abbrlink</code>字段。该字段用于生成永久链接，否则404</li>
<li>安装<a href="https://github.com/moelody/link-info-server">Link Server Plugin</a>，通过API提供Obsidian文件信息</li>
</ol>
<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>除了常规配置外，还需要安装以下插件：</p>
<ol>
<li><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a>：用于生成永久链接，对应Obsidian的<code>abbrlink</code>字段</li>
<li><a href="https://github.com/moelody/hexo-link-obsidian">hexo-link-obsidian</a>：用于请求Obsidian插件，获取文档信息。处理图片、视频、wiki等链接。<ul>
<li>图片被拷贝至<code>posts</code>目录</li>
<li>如果转换后的链接文档不在hexo的<code>_posts</code>目录中，则此链接修正为404</li>
</ul>
</li>
</ol>
<h4 id="Hexo使用"><a href="#Hexo使用" class="headerlink" title="Hexo使用"></a>Hexo使用</h4><p>至此完成了Obsidian和Hexo的联动，只需要执行以下操作即可：</p>
<ol>
<li>拷贝Obsidian文档至Hexo的<code>_posts</code>目录</li>
<li>Hexo生成并发布</li>
</ol>
<h3 id="MkDocs"><a href="#MkDocs" class="headerlink" title="MkDocs"></a>MkDocs</h3><p><font color=white>虽然Hexo非常不错，但不折腾就难受</font></p>
<p>鉴于Hexo部分已经把该做的都做了，这里直接偷懒，拷贝一份Hexo处理后的文件到MkDocs目录。</p>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><blockquote>
<p>[!note] 目录说明</p>
<p>Hexo与MkDocs目录需要在同一级</p>
</blockquote>
<p><strong>TL;DR</strong></p>
<p>使用<a href="https://github.com/chu-shen/hexo-link-obsidian/blob/mkdocs/index.js">该文件</a>替换<code>Hexo/node_modules/hexo-link-obsidian/index.js</code>即可</p>
<p><strong>思路如下：</strong></p>
<ol>
<li>在Hexo执行图片拷贝时，同时复制一份到MkDocs的<code>MkDocs/docs/images</code>目录</li>
<li>将Hexo处理后的MD文件输出到MkDocs的<code>MkDocs/docs</code>目录<ul>
<li>处理不正确的URL</li>
<li>重新添加元数据信息到处理后的MD</li>
<li>写入到<code>abbrlink.md</code>文件</li>
</ul>
</li>
<li>将处理后的文件链接写入到<code>MkDocs/docs/SUMMARY.md</code>，推荐搭配mkdocs-literate-nav插件使用</li>
</ol>
<h4 id="MkDocs使用"><a href="#MkDocs使用" class="headerlink" title="MkDocs使用"></a>MkDocs使用</h4><p>至此完成Hexo与MkDocs的联动，在<a href="/posts/20220712163320#Hexo%E4%BD%BF%E7%94%A8" data-pjax-state target="_Blank">前两步</a>的基础上执行：</p>
<ol start="3">
<li>整理<code>SUMMARY.md</code>，构建nav导航</li>
<li>MkDocs生成并发布</li>
</ol>
<h2 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h2><ul>
<li><p><a href="https://chushen.xyz/posts/20220712163320/">Hexo</a></p>
</li>
<li><p><a href="https://md.chushen.xyz/20220712163320/">MkDocs</a></p>
</li>
</ul>
<h2 id="已知不足"><a href="#已知不足" class="headerlink" title="已知不足"></a>已知不足</h2><h3 id="MkDocs-1"><a href="#MkDocs-1" class="headerlink" title="MkDocs"></a>MkDocs</h3><ul>
<li><input disabled="" type="checkbox"> Categories界面点击分类并无对应子界面</li>
<li><input disabled="" type="checkbox"> Categories不兼容当前使用的格式</li>
<li><input disabled="" type="checkbox"> RSS无法使用</li>
<li><input disabled="" type="checkbox"> Tag不完善</li>
<li><input disabled="" type="checkbox"> MkDocs的标题链接为英文+编号，无法对应</li>
</ul>
]]></content>
      <categories>
        <category>网站/博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>网站</tag>
        <tag>obsidian</tag>
        <tag>hexo</tag>
        <tag>mkdocs</tag>
      </tags>
  </entry>
  <entry>
    <title>foobar2000歌单导入导出</title>
    <url>/posts/20220816125305/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1 id="foobar2000歌单导入导出"><a href="#foobar2000歌单导入导出" class="headerlink" title="foobar2000歌单导入导出"></a>foobar2000歌单导入导出</h1><blockquote>
<p>本文档最后更新于：<strong>2022-08-16 22:55</strong> ，请注意文章时效性！</p>
</blockquote>
<h2 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h2><h3 id="一些方法"><a href="#一些方法" class="headerlink" title="一些方法"></a>一些方法</h3><ul>
<li><p>导入fpl/m3u/m3u8</p>
</li>
<li><p>使用<a href="/404#%E6%92%AD%E6%94%BE%E8%AE%B0%E5%BD%95" data-pjax-state target="_Blank">Last.fm</a>插件导入<a href="https://www.xspf.org/">XSPF</a>，元数据必须包括<code>title</code>和<code>creator</code>，格式参照下面：</p>
  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">playlist</span> <span class="attr">version</span>=<span class="string">&quot;1&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xspf.org/ns/0/&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">trackList</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">track</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">location</span>&gt;</span>https://music.163.com/song?id=544000653<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">title</span>&gt;</span>Is This Love<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">album</span>&gt;</span>THE IDOLM@STER MASTER SPECIAL 03<span class="tag">&lt;/<span class="name">album</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">creator</span>&gt;</span>我那覇響<span class="tag">&lt;/<span class="name">creator</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">track</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">trackList</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">playlist</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="SQLite导入"><a href="#SQLite导入" class="headerlink" title="SQLite导入"></a>SQLite导入</h3><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>本文的导入导出工具都存在各种各样的问题。<del>为了提高准确度和效率</del>，采用<a href="/404#sqlite" data-pjax-state target="_Blank">sqlite</a>编写SQL进行处理。</p>
<p>SQL编辑器👇：</p>
<p><img src="images/Pasted%20image%2020220810214137.png" alt="Pasted image 20220810214137"></p>
<blockquote>
<p>[!danger] 注意事项<br>为了在创建播放列表后更新数据库，需要开启下面的选项（说明见<code>AdvancedOptions.html</code>）：<br><img src="images/Pasted%20image%2020220526145448.png" alt="Pasted image 20220526145448"></p>
<p><strong>注意！！！</strong>：此插件在使用时存在极大的闪退风险。因此在使用前请先退出foobar2000（自动保存更新数据，如：歌曲等级），然后重新打开使用。再确认导入的歌单大致符合要求后，重来一遍上述操作。</p>
</blockquote>
<h4 id="准备歌曲"><a href="#准备歌曲" class="headerlink" title="准备歌曲"></a>准备歌曲</h4><blockquote>
<p>[!tip]</p>
<ul>
<li>歌曲名中<code>&#39;</code>需转义，改为<code>&#39;&#39;</code></li>
</ul>
</blockquote>
<p>首先将需<a href="/posts/20220525150943#%E5%AF%BC%E5%87%BA%E5%88%B0%E6%9C%AC%E5%9C%B0" data-pjax-state target="_Blank">导入的歌曲标题</a>复制出来，标题之间以这三个符号(<code>&#39;,&#39;</code>)分隔，首尾添加<code>&#39;</code></p>
<h4 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h4><p>首先创建虚拟表<code>Import_From_NetEase</code>和标题表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> VIRTUAL <span class="keyword">TABLE</span> Import_From_NetEase <span class="keyword">USING</span> MetaDB_Module(no_multivalue_split, playlist);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 其他可选操作👇</span></span><br><span class="line"><span class="comment">-- 创建包含标题名的表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> NetEase_Titles(titleName);</span><br><span class="line"><span class="comment">-- 插入得到的标题</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> NetEase_Titles <span class="keyword">VALUES</span> (<span class="string">&#x27;Is This Love&#x27;</span>),(<span class="string">&#x27;遠い音楽&#x27;</span>);</span><br><span class="line">	</span><br><span class="line"><span class="comment">-- 清空表（导入其他标题前执行）</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> NetEase_Titles;</span><br><span class="line"><span class="comment">-- 删除表（完工退出时执行）</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> NetEase_Titles;</span><br></pre></td></tr></table></figure>

<h4 id="列表插入匹配歌曲"><a href="#列表插入匹配歌曲" class="headerlink" title="列表插入匹配歌曲"></a>列表插入匹配歌曲</h4><p>插入完全匹配歌曲。用<a href="/posts/20220816125305#%E5%87%86%E5%A4%87%E6%AD%8C%E6%9B%B2" data-pjax-state target="_Blank">准备歌曲</a>步骤的结果替换下面的<code>&#39;菫&#39;,&#39;黒の剣巫&#39;</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Import_From_NetEase (path,subsong, playlist_name)</span><br><span class="line"><span class="keyword">SELECT</span> a.path,a.subsong,</span><br><span class="line">    <span class="string">&#x27;需要插入的播放列表，可自动创建&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> MediaLibrary a</span><br><span class="line"><span class="keyword">WHERE</span> title <span class="keyword">IN</span>(<span class="string">&#x27;菫&#x27;</span>,<span class="string">&#x27;黒の剣巫&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 其他过滤条件，比特率大于320，专辑以THE IDOLM@STER开头</span></span><br><span class="line"><span class="comment">--bitrate&gt;320 AND album LIKE &#x27;THE IDOLM@STER%&#x27; AND</span></span><br></pre></td></tr></table></figure>

<h4 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h4><ol>
<li>插入<code>播放列表b</code>中不存在的<code>播放列表a</code>的歌曲到<code>待插入的列表</code> <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Import_From_NetEase (path,subsong, playlist_name)</span><br><span class="line"><span class="keyword">SELECT</span> a.path,a.subsong,</span><br><span class="line">    <span class="string">&#x27;待插入的列表&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> Playlist a</span><br><span class="line"><span class="keyword">WHERE</span> playlist_name <span class="operator">=</span> <span class="string">&#x27;播放列表a&#x27;</span></span><br><span class="line">    <span class="keyword">AND</span> a.title <span class="keyword">NOT</span> <span class="keyword">IN</span>(</span><br><span class="line">        <span class="keyword">SELECT</span> b.title</span><br><span class="line">        <span class="keyword">FROM</span> Playlist b</span><br><span class="line">        <span class="keyword">WHERE</span> b.playlist_name <span class="operator">=</span> <span class="string">&#x27;播放列表b&#x27;</span></span><br><span class="line">    );</span><br></pre></td></tr></table></figure></li>
<li>输出未匹配到的歌曲 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> a.titleName</span><br><span class="line"><span class="keyword">FROM</span> NetEase_Titles a</span><br><span class="line"><span class="keyword">WHERE</span> a.titleName <span class="keyword">NOT</span> <span class="keyword">IN</span>(</span><br><span class="line">        <span class="keyword">SELECT</span> b.title</span><br><span class="line">        <span class="keyword">FROM</span> Playlist b</span><br><span class="line">        <span class="keyword">WHERE</span> b.playlist_name <span class="operator">=</span> <span class="string">&#x27;播放列表&#x27;</span></span><br><span class="line">    );</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h2><h3 id="一些方法-1"><a href="#一些方法-1" class="headerlink" title="一些方法"></a>一些方法</h3><ul>
<li>保存为fpl（二进制）</li>
<li>保存为m3u（部分字符不支持），仅文件名</li>
<li>保存为m3u8，仅文件名</li>
<li>使用<a href="/404#%E6%92%AD%E6%94%BE%E8%AE%B0%E5%BD%95" data-pjax-state target="_Blank">Last.fm</a>插件导出为<a href="https://www.xspf.org/">XSPF</a>，包括：<code>title</code>、<code>creator</code>、<code>album</code>、<code>trackNum</code>、<code>duration</code>。编码方式貌似有问题，存在乱码问题</li>
<li>其他插件（未验证）：<a href="https://github.com/Chocobo1/foo_xspf_1">GitHub - Chocobo1/foo_xspf_1: Import &amp; export XSPF playlist in foobar2000</a></li>
</ul>
<h3 id="SQLite导出"><a href="#SQLite导出" class="headerlink" title="SQLite导出"></a>SQLite导出</h3><p>执行SQL后，在结果上右键复制即可</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">distinct</span> b.title</span><br><span class="line"><span class="keyword">FROM</span> Playlist b</span><br><span class="line"><span class="keyword">WHERE</span> b.playlist_name <span class="operator">=</span> <span class="string">&#x27;播放列表&#x27;</span></span><br></pre></td></tr></table></figure>

<p>然后使用<a href="/posts/20220815145511#%E4%B8%A4%E5%88%97%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E9%A1%B9" data-pjax-state target="_Blank">Excel操作</a>筛选未匹配歌曲啥的~~</p>
]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>音乐</tag>
        <tag>歌单</tag>
        <tag>foobar2000</tag>
      </tags>
  </entry>
  <entry>
    <title>网易云歌单导入导出</title>
    <url>/posts/20220525150943/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1 id="网易云歌单导入导出"><a href="#网易云歌单导入导出" class="headerlink" title="网易云歌单导入导出"></a>网易云歌单导入导出</h1><blockquote>
<p>本文档最后更新于：<strong>2022-08-16 22:50</strong> ，请注意文章时效性！</p>
</blockquote>
<blockquote>
<p>[!caution] 前言<br><em><strong>暂未找到完美工具</strong></em>，因为</p>
<ul>
<li>版权问题：音乐库不够大</li>
<li>元数据标准：无法精确匹配</li>
<li>……</li>
</ul>
</blockquote>
<h2 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h2><h3 id="一些方法"><a href="#一些方法" class="headerlink" title="一些方法"></a>一些方法</h3><ol>
<li>以<code>歌名 - 歌手</code>的形式提取网易云歌单：<a href="https://yyrcd.com/n2s/">迁移 网易云 / QQ 音乐到 Apple Music, Youtube Music, Spotify</a></li>
<li>使用<a href="https://www.tunemymusic.com/zh-cn/">Tune My Music</a>导出到对应媒体平台</li>
</ol>
<h3 id="导出到本地"><a href="#导出到本地" class="headerlink" title="导出到本地"></a>导出到本地</h3><p><strong>原理：</strong></p>
<p>获取歌曲<code>标题/歌手/专辑</code>对应的<code>CSS元素/xpath路径</code>的值，然后拼接成最后的成果。<strong>适用个人歌单</strong>，因为只有个人歌单才能在web端完全显示所有歌曲。</p>
<p><strong>操作：</strong></p>
<ol>
<li>将下面的代码粘贴到浏览器的控制台并执行<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 来源：[网易云音乐歌单列表导出方法！](https://zhuanlan.zhihu.com/p/187600229)</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;开始导出歌单……&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//标题</span></span><br><span class="line"><span class="keyword">let</span> title = <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.m-table tbody td:nth-child(2) b&quot;</span>)).<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> item.<span class="property">title</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//艺术家</span></span><br><span class="line"><span class="keyword">let</span> artist = <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.m-table tbody td:nth-child(4) &gt; div&quot;</span>)).<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> item.<span class="property">title</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//专辑</span></span><br><span class="line"><span class="keyword">let</span> album = <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.m-table tbody td:nth-child(5) &gt; div &gt; a&quot;</span>)).<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> item.<span class="property">title</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> list = []</span><br><span class="line">list.<span class="title function_">push</span>(<span class="string">&quot;歌曲标题|歌手|专辑&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; title.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// 去除网易云音乐自带的歌曲补充信息，如：中文名</span></span><br><span class="line">    <span class="keyword">let</span> new_title=title[i].<span class="title function_">replace</span>(<span class="regexp">/ - .+/</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理&amp;nbsp、「、」、TVアニメ、(期間限定)</span></span><br><span class="line">    <span class="comment">// [请问这是什么字符“&#x27;%C2%A0&#x27;”？](https://segmentfault.com/q/1010000002754028/)</span></span><br><span class="line">    new_title=new_title.<span class="title function_">replace</span>(<span class="regexp">/ /g</span>, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="keyword">let</span> new_album=album[i].<span class="title function_">replace</span>(<span class="regexp">/ /g</span>, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="keyword">let</span> new_artist=artist[i].<span class="title function_">replace</span>(<span class="regexp">/ /g</span>, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    new_album=new_album.<span class="title function_">replace</span>(<span class="regexp">/「/g</span>, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    new_album=new_album.<span class="title function_">replace</span>(<span class="regexp">/」/g</span>, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    new_album=new_album.<span class="title function_">replace</span>(<span class="regexp">/TVアニメ/</span>, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    new_album=new_album.<span class="title function_">replace</span>(<span class="regexp">/\(期間限定.*\)/</span>, <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 【Jpopsuki】仅保留第一位艺术家用于Jpopsuki搜索</span></span><br><span class="line">    new_artist=new_artist.<span class="title function_">replace</span>(<span class="regexp">/\/.+/</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> temp = new_title + <span class="string">&#x27;|&#x27;</span> + new_artist + <span class="string">&#x27;|&#x27;</span> + new_album</span><br><span class="line">    <span class="comment">// console.log(temp)</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="regexp">/最新热歌慢摇/</span>.<span class="title function_">test</span>(album[i]))&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;忽略“&quot;</span>+album[i]+<span class="string">&quot;”专辑&quot;</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        list.<span class="title function_">push</span>(temp)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">copy</span>(list.<span class="title function_">join</span>(<span class="string">&#x27;\n&#x27;</span>));</span><br></pre></td></tr></table></figure></li>
<li>然后打开Excel，将剪贴板中内容复制过去</li>
<li>然后选择<code>数据 &gt; 分列</code>，分割符号为<code>|</code></li>
<li>得到完整的歌单文件</li>
</ol>
<blockquote>
<p>[!check] 没结果？<br>先选择一下元素(Ctrl+Shift+C)，点击歌曲加载信息，然后再执行</p>
</blockquote>
<blockquote>
<p>[!check] 结果有问题？<br>默认以<code>|</code>进行分割，因此如果歌曲信息里带此符号，则可能出现不准确的问题</p>
</blockquote>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.wevg.org/archives/netease-to-apple-music/">导入网易云音乐歌单到 Apple Music | Vigorous Pro</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/104595102">如何将网易云歌单导入到苹果Music？</a></p>
<p><a href="https://www.zhihu.com/question/31816805">网易云音乐怎么导出歌单？</a></p>
<h2 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h2><ol>
<li>使用<a href="https://www.tunemymusic.com/zh-cn/">Tune My Music</a>导出对应媒体平台歌单为csv</li>
<li>使用<a href="https://github.com/lljxx1/Music-Analytics">GitHub - lljxx1/Music-Analytics</a>导入到网易云。<font color='red'>不推荐，识别率低</font></li>
<li>使用<a href="/404" data-pjax-state target="_Blank">Automa</a>自动化添加</li>
</ol>
<h2 id="歌单处理"><a href="#歌单处理" class="headerlink" title="歌单处理"></a>歌单处理</h2><p>可能会用到的一些操作：</p>
<ul>
<li><a href="/posts/20220815145511#%E4%B8%A4%E5%88%97%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E9%A1%B9" data-pjax-state target="_Blank">Excel 两列去除重复项</a></li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><a href="https://binaryify.github.io/NeteaseCloudMusicApi/#/">网易云音乐 NodeJS 版 API</a></p>
]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>音乐</tag>
        <tag>歌单</tag>
        <tag>网易云音乐</tag>
      </tags>
  </entry>
  <entry>
    <title>自动化处理音乐专辑</title>
    <url>/posts/20220816125806/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1 id="自动化处理音乐专辑"><a href="#自动化处理音乐专辑" class="headerlink" title="自动化处理音乐专辑"></a>自动化处理音乐专辑</h1><blockquote>
<p>本文档最后更新于：<strong>2022-08-16 22:53</strong> ，请注意文章时效性！</p>
</blockquote>
<h2 id="从Jpopsuki-eu下载"><a href="#从Jpopsuki-eu下载" class="headerlink" title="从Jpopsuki.eu下载"></a>从Jpopsuki.eu下载</h2><h3 id="查询样例"><a href="#查询样例" class="headerlink" title="查询样例"></a>查询样例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 普通查询链接</span><br><span class="line">https://jpopsuki.eu/torrents.php?searchstr=BOOTLEG&amp;searchsubmit=1&amp;filter_cat[1]=1&amp;filter_cat[2]=1&amp;disablegrouping=1&amp;order_by=s4</span><br><span class="line"></span><br><span class="line">// 高级查询链接</span><br><span class="line">https://jpopsuki.eu/torrents.php?action=advanced&amp;artistname=米津玄師&amp;torrentname=BOOTLEG&amp;searchsubmit=1&amp;filter_cat[1]=1&amp;filter_cat[2]=1&amp;disablegrouping=1&amp;order_by=s4</span><br></pre></td></tr></table></figure>

<h3 id="Automa自动下载专辑"><a href="#Automa自动下载专辑" class="headerlink" title="Automa自动下载专辑"></a>Automa自动下载专辑</h3><p>使用<a href="https://www.automa.site/workflow/n7J4VANsXLdnFClhTP2yX">Automa工作流-下载Jpop种子</a>执行下载</p>
<h4 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h4><ul>
<li>浏览器关闭<code>下载内容 &gt; 下载前询问每个文件的保存位置</code>，否则<code>另存为</code>操作需要手动点击保存</li>
<li>允许Jpopsuki下载多个文件，对应<code>网站设置 &gt; 自动下载项 &gt; 允许</code>。不清楚的话可以直接运行，在jpopsuki界面<strong>会提示</strong>是否允许下载多个文件，点击允许即可</li>
</ul>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>根据<a href="/posts/20220816125806#%E6%9F%A5%E8%AF%A2%E6%A0%B7%E4%BE%8B" data-pjax-state target="_Blank">Jpopsuki查询链接</a>，拼接上我们<a href="/posts/20220525150943#%E5%AF%BC%E5%87%BA%E5%88%B0%E6%9C%AC%E5%9C%B0" data-pjax-state target="_Blank">需要下载的专辑</a>，然后进行搜索。</p>
<p><strong>搜索模式</strong>分为两种：</p>
<ul>
<li>高级搜索：使用歌手与专辑进行搜索，具有精确度高、匹配率低的特点</li>
<li>普通搜索：只使用专辑进行搜索，具有精确度低、匹配率高的特点</li>
</ul>
<p><strong>搜索逻辑</strong>：如果存在歌手列，则首先使用高级搜索，如果失败则使用普通搜索。如果两种模式均无结果，则记录进下载失败列表，并在下载完成后导出此文件。</p>
<blockquote>
<p>[!attention] 下载说明<br>只搜索<code>album</code>和<code>single</code>分类，并且默认下载文件最大的种子。如果种子名包含<code>ISO</code>等不需要的格式，需要手动重新搜索下载</p>
</blockquote>
<p><img src="images/Pasted%20image%2020220816135006.png" alt="流程图"></p>
<h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><ol>
<li>点击：<code>循环数据 &gt; 插入数据 &gt; 导入文件 &gt; 选择上一步处理好的文件</code></li>
</ol>
<blockquote>
<p>[!attention]<br>首行为标题行（主键），包括：<code>专辑</code>（必需）、<code>歌手</code>（可选）、<code>其他</code>（无影响）</p>
</blockquote>
<p>最后的结果应该是：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;歌曲标题&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Wicked&quot;</span><span class="punctuation">,</span> <span class="comment">// 其他列无影响</span></span><br><span class="line">    <span class="attr">&quot;歌手&quot;</span><span class="punctuation">:</span> <span class="string">&quot;星街すいせい&quot;</span><span class="punctuation">,</span> <span class="comment">// 可选</span></span><br><span class="line">    <span class="attr">&quot;专辑&quot;</span><span class="punctuation">:</span> <span class="string">&quot;TEMPLATE&quot;</span> <span class="comment">// 必需</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>点击执行工作流。会自动根据文件数据下载种子并导出下载失败的专辑</li>
</ol>
]]></content>
      <categories>
        <category>自动化</category>
      </categories>
      <tags>
        <tag>音乐</tag>
        <tag>自动化</tag>
        <tag>automa</tag>
      </tags>
  </entry>
  <entry>
    <title>网易云音乐与foobar2000迁移流程</title>
    <url>/posts/20220816220810/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1 id="网易云音乐与foobar2000迁移流程"><a href="#网易云音乐与foobar2000迁移流程" class="headerlink" title="网易云音乐与foobar2000迁移流程"></a>网易云音乐与foobar2000迁移流程</h1><blockquote>
<p>本文档最后更新于：<strong>2022-08-16 22:47</strong> ，请注意文章时效性！</p>
</blockquote>
<h2 id="网易云音乐-gt-foobar2000思路"><a href="#网易云音乐-gt-foobar2000思路" class="headerlink" title="网易云音乐-&gt;foobar2000思路"></a>网易云音乐-&gt;foobar2000思路</h2><p>介绍一种<del>笨方法</del>需要一定动手能力的迁移方法，其主要流程如下：</p>
<ul>
<li><a href="/posts/20220525150943#%E5%AF%BC%E5%87%BA%E5%88%B0%E6%9C%AC%E5%9C%B0" data-pjax-state target="_Blank">获取歌单信息</a>，包括但不限于：专辑、歌手、歌曲名</li>
<li>根据歌单信息在<a href="/posts/20220816125305#SQLite%E5%AF%BC%E5%85%A5" data-pjax-state target="_Blank">本地音乐库匹配歌曲</a>，<a href="/posts/20220815145511#%E4%B8%A4%E5%88%97%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E9%A1%B9" data-pjax-state target="_Blank">筛选出未匹配歌曲</a></li>
<li>在下载站根据筛选结果<a href="/posts/20220816125806#Automa%E8%87%AA%E5%8A%A8%E4%B8%8B%E8%BD%BD%E4%B8%93%E8%BE%91" data-pjax-state target="_Blank">下载未匹配歌曲</a></li>
<li>将新歌曲导入进本地音乐库，<a href="/posts/20220816125305#SQLite%E5%AF%BC%E5%85%A5" data-pjax-state target="_Blank">再次进行匹配</a>，<a href="/posts/20220815145511#%E4%B8%A4%E5%88%97%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E9%A1%B9" data-pjax-state target="_Blank">筛选出未匹配歌曲</a></li>
<li>形成本地歌单+未匹配歌曲列表</li>
</ul>
<p><img src="images/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%AD%8C%E5%8D%95%E8%BF%81%E7%A7%BB%E8%87%B3foobar2000%E6%B5%81%E7%A8%8B.excalidraw.svg" alt="网易云音乐歌单迁移至foobar2000流程.excalidraw"></p>
]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>音乐</tag>
        <tag>foobar2000</tag>
        <tag>网易云音乐</tag>
      </tags>
  </entry>
</search>
